# Generated by Django 5.2.3 on 2025-10-19 18:18

import apps.university_programs.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('universities', '0005_universityannouncement'),
        ('university_programs', '0001_initial'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='AcademicContent',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True,
                         primary_key=True, serialize=False, verbose_name='ID')),
                        ('faculty_count', models.IntegerField(default=0)),
                        ('course_count', models.IntegerField(default=0)),
                        ('subject_count', models.IntegerField(default=0)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('university', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                         related_name='academic_summary', to='universities.universities')),
                    ],
                    options={
                        'db_table': 'academic_content_summary',
                        'managed': True,
                    },
                )
            ],
            database_operations=[],
        ),
        # The table 'faculty_degree_programs' already exists in the database
        # (created externally). We only add the model state without creating
        # the table again to avoid OperationalError (1050).
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='FacultyDegreePrograms',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True,
                         primary_key=True, serialize=False, verbose_name='ID')),
                        ('degree_program', models.ForeignKey(
                            on_delete=django.db.models.deletion.DO_NOTHING, to='university_programs.degreeprograms')),
                        ('faculty', models.ForeignKey(
                            on_delete=django.db.models.deletion.DO_NOTHING, to='universities.faculties')),
                    ],
                    options={
                        'db_table': 'faculty_degree_programs',
                        'managed': True,
                    },
                )
            ],
            database_operations=[],
        ),
        migrations.CreateModel(
            name='SubjectFile',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(
                    upload_to=apps.university_programs.models.subject_upload_path)),
                ('original_name', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='files', to='university_programs.courses')),
            ],
            options={
                'db_table': 'subject_files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubjectOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                 related_name='overview', to='university_programs.courses')),
            ],
            options={
                'db_table': 'subject_overviews',
                'managed': True,
            },
        ),
    ]
